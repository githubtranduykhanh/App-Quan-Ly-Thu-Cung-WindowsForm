<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABAxJREFUaEPtmcuvTWcYh49rxK0ux63lFEEZuCQYKGm0IqEmrTgTCTNiZihRf0An
        BoaISTspkSBEtA2C9EbiMlBNGLRS1L3iFnHZnt+3f9+2rX3OPmthnb0l60me7L3e733X935rrbPW2rQU
        pKBUKs3G03hG3x1+f6Dp3rgBn2DkKX6LfZ3W3NDoVDyJ4jlutvouNDbV6c0HzfXAtfgAxd/4uYc1/ile
        1AA8Rp2xnh5uDmioDQ9jZAcOxl64zuq7YhqLqKbNu2ksNNKOd9QVXMevHB+PxxQ0v+Fkjy3BKwrCPVyr
        eENg8pG4R52Y3TjCY2vwvoLwrxWKrXHOCFRNRPsaqbFugwmX4lXNDv9jOKJ8anF7FTS7cDh+gFsVMIfw
        Q9fojN5WEG7g14rnCpPoGq9u6Gcc57HleFNB0OJWhaIqiKnpW0qAu7jS8dF4QEGjAzA0FL1r2PF8vKRZ
        4BGGuw4mF/cTjnVZDYyNwv1KNKFpTN71/sEvXPb2sLN+qAdZfA78gZ94TLfUmsWFwjqQE5uOf0dqOtyq
        +ZyIxxWEF6iDNCAUvinsYC5eQBGfzH2w08VlgZoJeEI7gNh0f0y+GehgzXdZeihK7ug8hnclPqfjWQWh
        srhQ+AZQm5zrT6yeS+9pItsrDonT8BSK6qOkB1pywjkue2vY1ww8px1DR2f/GQrlzHRZLQzG6/YhCr1i
        LPSYLoF3e912APtMXrK/4xSPzcP6rzgEPsYjGPkOB3lsNcY/Sj07vgxFOcIci/CyJgTdRNajDrSujC2o
        gyl+wUkuC4Wx6Bouc2wMHlTQfI9DQkE3oLk8Z0S9jPHYMlSv4nIoEA6IVm9XP7j0uSIkNgDN7R6EPtsd
        bw0RCInC2yL5KvEjfuS0hkEPeojuU0NGD9Fh5a8dLyReYpEeTmk46qXcUoVKr055bSHiV3++SmgS3Jao
        9Cg8HBL01qnnw0bU8yLg4abBbQn1qF7V8w0PhwQ9JyZ6s1LgzabBbVX64qvey8Z7s5aQDd7MDKWLcTv+
        hXqblXpn24aLnJYZagPe7BrnZ14IJVOw+udtZxzFVw+ylJRLc14I6Z9h/O3+H+oanokD7Cz8BjUm9Ktw
        gctTUS7LcSGk6kzERfyAAz1UA2ODcKcSQYtJfWbKJfkuJF5OWkSXzx7loB5q4ojDXeL8fBZCmv6whS6Z
        Ts9EEnJ1ZvTPRyLVDcC5uS1Edyex0aHUULOpXFra6lBdnJvbQnSLFTMcSg01ugGICw7Vxbm5LST+Vkl9
        WUVUUy4t3XeoLs7NbSEBb2bG5fnM5fxiIVlwebGQuji/WEgWXF4spC7OLxaSBZcXC6mL84uFZMHl+S4k
        Cy7NjMsz4dKuITf+L1Jajrs0M9R221wFBZlpaXkJ5e6O++Ve4WQAAAAASUVORK5CYII=
</value>
  </data>
</root>